--docker consul
1、docker pull consul
--部署server
2、docker run -d -p 8510:8500 --restart=always -v /root/data/consul/server1/data:/consul/data -v /root/data/consul/server1/config/:/consul/config -e CONSUL_BIND_INTERFACE='eth0' --privileged=true --name=consul_server_1 consul agent -server -bootstrap-expect=3 -ui -node=consul_server_1 -client='0.0.0.0' -data-dir /consul/data -config-dir /consul/config -datacenter=adnc_dc;　
--为了让Consul实例2加入集群，首先获取一下Consul实例1的IP地址：
3、JOIN_IP="$(docker inspect -f '{{.NetworkSettings.IPAddress}}' consul_server_1)";
4、docker run -d -p 8520:8500 --restart=always -v /root/data/consul/server2/data:/consul/data -v /root/data/consul/server2/config/:/consul/config -e CONSUL_BIND_INTERFACE='eth0' --privileged=true --name=consul_server_2 consul agent -server -ui -node=consul_server_2 -client='0.0.0.0' -datacenter=adnc_dc -data-dir /consul/data -config-dir /consul/config -join=$JOIN_IP;　
5、docker run -d -p 8530:8500 --restart=always -v /root/data/consul/server3/data:/consul/data -v /root/data/consul/server3/config/:/consul/config -e CONSUL_BIND_INTERFACE='eth0' --privileged=true --name=consul_server_3 consul agent -server -ui -node=consul_server_3 -client='0.0.0.0' -datacenter=adnc_dc -data-dir /consul/data -config-dir /consul/config -join=$JOIN_IP;
--验证
6、docker exec consul_server_1 consul operator raft list-peers
--部署client
7、docker run -d -p 8550:8500 --restart=always -v /data/consul/client1/config:/consul/config -e CONSUL_BIND_INTERFACE='eth0' --name=consul_client_1 consul agent -node=consul_client_1 -join=$JOIN_IP -client='0.0.0.0' -datacenter=adnc_dc -config-dir /consul/config
7.5 docker run -d -p 8560:8500 --restart=always -v /data/consul/client2/config:/consul/config -e CONSUL_BIND_INTERFACE='eth0' --name=consul_client_2 consul agent -node=consul_client_2 -join=$JOIN_IP -client='0.0.0.0' -datacenter=adnc_dc -config-dir /consul/config
--安装fabio
8、docker run --name fabio1 -d -p 9998:9998 -p 9999:9999 --restart=always -v /root/data/fabio/fabio.properties:/etc/fabio/fabio.properties magiconair/fabio
----------------------
--docker mysql
1、docker pull mariadb
2、docker run --name mariadb -p 13308:3306 -e MYSQL_ROOT_PASSWORD=alpha.netcore --restart=always -v /root/data/mariadb/conf:/etc/mysql -v /root/data/mariadb/logs:/var/log/mysql -v /root/data/mariadb/data:/var/lib/mysql -d mariadb
--进入docker本地连接mysql客户端
3、docker exec -it mariadb bash
4、mysql -uroot -palpha.netcore
--退出mysql与容器
5、exit

----------------------
--docker redis
1、docker pull redis
--从官网下载redis.conf,修改配置，redis容器从服务器挂载redis.conf
--https://cloud.tencent.com/developer/article/1562815 详细配置
2、wget http://download.redis.io/redis-stable/redis.conf 
3、docker run -p 13379:13379 --name redis -v /root/data/redis/redis.conf:/etc/redis/redis.conf -v /root/data/redis/data:/data -d redis redis-server /etc/redis/redis.conf

----------------------
--docker mongodb
1、docker pull mongo
--https://www.jianshu.com/p/576a156f6877
--https://www.cnblogs.com/smiler/p/10112676.html
2、docker run --name mongo -p 13017:27017 -v /root/data/mongo:/data/db -v /root/data/mongo/backup:/data/backup -d mongo --auth
3、docker exec -it mongo mongo admin
4、db.createUser({user:"root",pwd:"football",roles:[{role:'root',db:'admin'}]})
5、docker pull mongo-express
6、docker run -it --restart=always --name mongo-express --link mongo:mongo-db -d -p 13081:8081 -e ME_CONFIG_OPTIONS_EDITORTHEME="3024-night" -e ME_CONFIG_BASICAUTH_USERNAME="mongoexpress" -e ME_CONFIG_BASICAUTH_PASSWORD="football" -e ME_CONFIG_MONGODB_ADMINUSERNAME="root" -e ME_CONFIG_MONGODB_ADMINPASSWORD="football" mongo-express
7、创建Logs数据库,在logs数据库创建用户
--https://www.jianshu.com/p/62736bff7e2e
8、docker exec -it mongo mongo admin
9、db.auth('root','football')
10、use Logs
11、db.createUser({user:'alpha',pwd:'football',roles:[{role:'readWrite',db:'Logs'}]})



--docker rabbitmq
--rabbitmq:management带管理界面
1、docker pull rabbitmq:management
--https://www.cnblogs.com/cao-lei/p/13050206.html
2、docker run --name=rabbitmq -p 18578:15672 -p 13572:5672 -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=football -d rabbitmq:management

--docker nginx，静态文件放在 宿主机/root/data/nginx/html 目录下
docker run --name nginx -p 80:80 -v /root/data/nginx/html:/usr/share/nginx/html -v /root/data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf  -v /root/data/nginx/conf.d:/etc/nginx/conf.d -v /root/data/nginx/logs:/var/log/nginx -d nginx


docker run -d -p 9999:9999 -p 9998:9998 -v /root/data/fabio/fabio.properties:/etc/fabio/fabio.properties fabiolb/fabio


